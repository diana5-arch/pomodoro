<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Minimalist Study Timer</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;500;700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      background-color: #121212;
      color: #f0f0f0;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 20px;
    }
    h1 {
      font-weight: 500;
      margin-bottom: 20px;
    }
    .timer, .break, .todo, .rewards {
      background: #1e1e1e;
      padding: 20px;
      border-radius: 12px;
      margin: 15px;
      width: 300px;
      text-align: center;
      box-shadow: 0 0 10px rgba(0,0,0,0.5);
    }
    button {
      background: #333;
      color: #f0f0f0;
      border: none;
      padding: 8px 14px;
      margin: 5px;
      border-radius: 6px;
      cursor: pointer;
    }
    button:hover {
      background: #555;
    }
    input[type="text"] {
      padding: 6px;
      width: 70%;
      border-radius: 6px;
      border: none;
      margin-right: 5px;
    }
    ul {
      list-style: none;
      padding: 0;
      margin-top: 10px;
      text-align: left;
    }
    li {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin: 5px 0;
    }
    li span.done {
      text-decoration: line-through;
      color: #888;
    }
  </style>
</head>
<body>
  <h1>Study Timer</h1>
  <div class="timer">
    <h2 id="time">00:00:00</h2>
    <button onclick="startTimer()">Start</button>
    <button onclick="pauseTimer()">Pause</button>
    <button onclick="resetTimer()">Reset</button>
  </div>

  <div class="break">
    <h3>Break Bank: <span id="breakBank">0</span> min</h3>
    <h3 id="breakTime">00:00</h3>
    <button onclick="startBreak()">Start Break</button>
    <button onclick="pauseBreak()">Pause Break</button>
    <button onclick="resetBreak()">Reset Break</button>
  </div>

  <div class="todo">
    <h3>To-Do List</h3>
    <input type="text" id="todoInput" placeholder="Add task...">
    <button onclick="addTask()">Add</button>
    <ul id="todoList"></ul>
  </div>

  <div class="rewards">
    <h3>Pudding Rewards üçÆ</h3>
    <p id="puddings">0</p>
  </div>

  <div class="alarm">
    <h3>Upload Custom Alarm</h3>
    <input type="file" id="alarmFile" accept="audio/*">
  </div>

  <audio id="alarmSound"></audio>

  <script>
    let timerInterval, breakInterval;
    let seconds = 0, breakSeconds = 0;
    let breakBank = parseInt(localStorage.getItem('breakBank')) || 0;
    let puddings = parseInt(localStorage.getItem('puddings')) || 0;
    document.getElementById('breakBank').innerText = breakBank;
    document.getElementById('puddings').innerText = puddings;

    // Load To-Do List from localStorage
    let tasks = JSON.parse(localStorage.getItem('tasks')) || [];
    renderTasks();

    function updateDisplay() {
      let hrs = Math.floor(seconds / 3600);
      let mins = Math.floor((seconds % 3600) / 60);
      let secs = seconds % 60;
      document.getElementById('time').innerText =
        `${String(hrs).padStart(2,'0')}:${String(mins).padStart(2,'0')}:${String(secs).padStart(2,'0')}`;
    }

    function startTimer() {
      if (timerInterval) return;
      timerInterval = setInterval(() => {
        seconds++;
        updateDisplay();

        if (seconds % 1800 === 0) {
          breakBank += 10;
          document.getElementById('breakBank').innerText = breakBank;
          localStorage.setItem('breakBank', breakBank);
        }
        if (seconds % 3600 === 0) {
          puddings++;
          document.getElementById('puddings').innerText = puddings;
          localStorage.setItem('puddings', puddings);
          playAlarm();
        }
      }, 1000);
    }

    function pauseTimer() {
      clearInterval(timerInterval);
      timerInterval = null;
    }

    function resetTimer() {
      pauseTimer();
      seconds = 0;
      updateDisplay();
    }

    function startBreak() {
      if (breakInterval || breakBank <= 0) return;
      breakSeconds = breakBank * 60;
      updateBreakDisplay();
      breakInterval = setInterval(() => {
        if (breakSeconds > 0) {
          breakSeconds--;
          updateBreakDisplay();
        } else {
          resetBreak();
          playAlarm();
        }
      }, 1000);
    }

    function pauseBreak() {
      clearInterval(breakInterval);
      breakInterval = null;
    }

    function resetBreak() {
      pauseBreak();
      breakSeconds = 0;
      document.getElementById('breakTime').innerText = '00:00';
    }

    function updateBreakDisplay() {
      let mins = Math.floor(breakSeconds / 60);
      let secs = breakSeconds % 60;
      document.getElementById('breakTime').innerText = `${String(mins).padStart(2,'0')}:${String(secs).padStart(2,'0')}`;
    }

    function addTask() {
      let input = document.getElementById('todoInput');
      let text = input.value.trim();
      if (text === '') return;
      tasks.push({ text: text, done: false });
      localStorage.setItem('tasks', JSON.stringify(tasks));
      renderTasks();
      input.value = '';
    }

    function toggleTask(index) {
      tasks[index].done = !tasks[index].done;
      localStorage.setItem('tasks', JSON.stringify(tasks));
      renderTasks();
    }

    function deleteTask(index) {
      tasks.splice(index, 1);
      localStorage.setItem('tasks', JSON.stringify(tasks));
      renderTasks();
    }

    function renderTasks() {
      let list = document.getElementById('todoList');
      list.innerHTML = '';
      tasks.forEach((task, i) => {
        let li = document.createElement('li');
        let span = document.createElement('span');
        span.innerText = task.text;
        if (task.done) span.classList.add('done');
        span.onclick = () => toggleTask(i);
        let delBtn = document.createElement('button');
        delBtn.innerText = 'X';
        delBtn.onclick = () => deleteTask(i);
        li.appendChild(span);
        li.appendChild(delBtn);
        list.appendChild(li);
      });
    }

    // Alarm handling
    let alarmFileInput = document.getElementById('alarmFile');
    let alarmSound = document.getElementById('alarmSound');

    alarmFileInput.addEventListener('change', function() {
      if (this.files && this.files[0]) {
        let url = URL.createObjectURL(this.files[0]);
        alarmSound.src = url;
      }
    });

    function playAlarm() {
      if (alarmSound.src) {
        alarmSound.play();
      } else {
        alert('‚è∞ Time is up!');
      }
    }
  </script>
</body>
</html>
